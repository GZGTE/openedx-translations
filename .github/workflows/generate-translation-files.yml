# This workflow generates translation files from code and adds the generated
# translation files to the openedx-translations repository via an auto-merged pull
# request.

name: Generate Translation Files

on:
  workflow_dispatch:    # by request
  schedule:
    - cron: '0 0 * * *'  # every day at midnight

jobs:
  setup-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.dynamic_branch.outputs.branch }}
    steps:
    - name: dynamically set BRANCH environment variable
      id: dynamic_branch
      run: echo "::set-output name=branch::automated/generate-translations-$(date +'%Y%m%dT%H%M%S')"
    - name: clone openedx/openedx-translations
      uses: actions/checkout@v3
    - name: make and push a new branch
      run: |
        git checkout -b ${{ steps.dynamic_branch.outputs.branch }}
        git push --set-upstream origin ${{ steps.dynamic_branch.outputs.branch }}

  python-translations:
    strategy:
      matrix:
        repo: [credentials]
    runs-on: ubuntu-latest
    needs: [setup-branch]

    steps:
      - name: Test BRANCH variable
        run: echo ${{ needs.setup-branch.outputs.branch }}
      # Clones the openedx-translations repo
      - name: clone openedx/openedx-translations
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.setup-branch.outputs.branch }}
      
      # Installs gettext, a dependency for generating translation files in django
      - name: install gettext
        run: sudo apt install -y gettext

      # Clones the  repository
      - name: clone openedx/${{ matrix.repo }}
        uses: actions/checkout@v3
        with:
          repository: openedx/${{ matrix.repo }}
          path: ${{ matrix.repo }}

      # Sets up Python
      - name: setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      # Installs Python requirements from translations.txt
      - name: install requirements
        run: |
          cd ${{ matrix.repo }}
          pip install -r requirements/translations.txt

      # Generates the english translation files
      - name: generate translations
        run: |
          cd ${{ matrix.repo }}
          make extract_translations
      
      # Add only the english translation files
      - name: add the english translation files
        run: |
          # set identity
          git config --global user.email "cmuniz@tcril.org"
          git config --global user.name "Carlos Muniz"
          # finds the directory containing the english locale usually located in
          # */*/conf/locale/en
          EN_DIR=$(find . -type d -name "en")
          # remove ${{ matrix.repo }}/.git so we don't commit a submodule
          rm -rf ${{ matrix.repo }}/.git
          # finds the django.po and djangojs.po files generated by make
          # extract_translations into EN_DIR and adds them
          DJANGO_PATH=$(find $EN_DIR -iname 'django.po')
          DJANGOJS_PATH=$(find $EN_DIR -iname 'djangojs.po')
          git add $DJANGO_PATH $DJANGOJS_PATH -v
          # Check the git statuses of translation files
          GIT_STATUS=$(git status DJANGO_PATH DJANGOJS_PATH -s)
  
          
      # Attempts to commit the english translation files if there is a difference
      - name: commit the english translation files
        if: ${{ env.GIT_STATUS }}
        run: |
          # commit the changes
          git commit -m "chore: add generated translations from ${{ matrix.repo }}"
          # push changes to branch
          git push
          
  merge-translations:
    runs-on: ubuntu-latest
    needs: [setup-branch, python-translations]

    steps:
      - name: Test BRANCH variable
        run: echo ${{ needs.setup-branch.outputs.branch }}
      # Clones the openedx-translations repo on the automated/generate-translations-# branch
      - name: clone openedx/openedx-translations
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.setup-branch.outputs.branch }}
      
      # Create a pull request
      - name: create pull request
        id: createPR
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: |
          PR_URL=$(gh pr create --title 'chore: add updated translation files' --body 'This PR is auto-generated by [generate-translation-files](https://github.com/openedx/openedx-translations/blob/master/.github/workflows/generate-translation-files.yml).')
      
      # If the above PR fails, delete the branch
      - name: delete empty branch
        if: (always() && steps.createPR.outcome == 'failure')
        run: |
          echo "A Pull Request cannot be created in the openedx-translations repository because there are no commits to the branch"
          git push origin -d ${{ needs.setup-branch.outputs.branch }}
          
      
      # Merges the pull request
      - name: merge pull request
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: gh pr merge $PR_URL --merge --delete-branch
        
